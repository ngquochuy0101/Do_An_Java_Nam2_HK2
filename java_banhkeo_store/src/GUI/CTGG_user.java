/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.ChuongTrinhGiamGiaBUS;
import javax.swing.JFrame;

import DTO.NhanVienDTO;
import BUS.NhanVienBUS;
import DTO.ChuongTrinhGiamGiaDTO;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author anhhu
 */
public class CTGG_user extends javax.swing.JPanel {
 private boolean data_check;
    /**
     * Creates new form NV_user
     */
    public CTGG_user() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formCTGG_txt = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        timkiem_form = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        them_btn29 = new javax.swing.JButton();
        label_SL = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        opt_txt = new javax.swing.JComboBox<>();
        tim_panel = new javax.swing.JPanel();
        tim_txt = new javax.swing.JTextField();
        date_tim_txt = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        CTGG_table = new javax.swing.JTable();

        formCTGG_txt.setBackground(new java.awt.Color(0, 255, 255));
        formCTGG_txt.setPreferredSize(new java.awt.Dimension(500, 500));

        jLabel51.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel51.setText("Chương trình giảm giá");
        jLabel51.setPreferredSize(new java.awt.Dimension(191, 20));

        timkiem_form.setBackground(new java.awt.Color(0, 255, 255));
        timkiem_form.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 204), new java.awt.Color(153, 255, 255))));

        jLabel52.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel52.setText("Tìm Kiếm");

        them_btn29.setBackground(new java.awt.Color(38, 170, 226));
        them_btn29.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn29.setForeground(new java.awt.Color(255, 255, 255));
        them_btn29.setText("     Enter");
        them_btn29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        them_btn29.setIconTextGap(2);
        them_btn29.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn29.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn29.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btn29them_btn2MouseClicked(evt);
            }
        });
        them_btn29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btn29them_btn2ThongkebtnActionPerformed(evt);
            }
        });

        label_SL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label_SL.setForeground(new java.awt.Color(255, 51, 51));

        jPanel25.setLayout(new java.awt.CardLayout());

        opt_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên chương trình","Ngày bắt đầu","Ngày kết thúc"}));

        tim_panel.setLayout(new java.awt.CardLayout());

        tim_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tim_txttim_txtActionPerformed(evt);
            }
        });
        tim_panel.add(tim_txt, "card2");
        tim_panel.add(date_tim_txt, "card3");

        javax.swing.GroupLayout timkiem_formLayout = new javax.swing.GroupLayout(timkiem_form);
        timkiem_form.setLayout(timkiem_formLayout);
        timkiem_formLayout.setHorizontalGroup(
            timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(them_btn29, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_SL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(opt_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(tim_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(32, 32, 32))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timkiem_formLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        timkiem_formLayout.setVerticalGroup(
            timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tim_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opt_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(them_btn29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_SL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        //doc_data();
        opt_txt.addActionListener(new ComboBoxActionListener());

        // Tạo một lớp con kế thừa từ DefaultTableModel
        DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "Tên ", "Ngày hiệu lực", "Ngày hết hạn"
            }
        ) {
            // Ghi đè phương thức isCellEditable để ngăn chặn việc chỉnh sửa ô
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Ngăn chặn việc chỉnh sửa ô
            }
        };
        CTGG_table.setModel(model
        );
        jScrollPane2.setViewportView(CTGG_table);
        doc_data();

        javax.swing.GroupLayout formCTGG_txtLayout = new javax.swing.GroupLayout(formCTGG_txt);
        formCTGG_txt.setLayout(formCTGG_txtLayout);
        formCTGG_txtLayout.setHorizontalGroup(
            formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCTGG_txtLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timkiem_form, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 72, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        formCTGG_txtLayout.setVerticalGroup(
            formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCTGG_txtLayout.createSequentialGroup()
                .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timkiem_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCTGG_txtLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formCTGG_txt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(formCTGG_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void them_btn29them_btn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btn29them_btn2MouseClicked
 
            Table_ghi t = new Table_ghi();
            if(tim_txt.getText().equals("") && opt_txt.getSelectedItem().equals("ID")&& opt_txt.getSelectedItem().equals("Tên chương trình")){
                doc_data();
            }
            else{
                ArrayList<ChuongTrinhGiamGiaDTO> arr = new ArrayList<>();
                ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
                try {
                    NVB.docDSCTGG();
                } catch (SQLException ex) {
                    Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
                }
                String opt = (String) opt_txt.getSelectedItem();

                switch (opt) {
                    case "ID" -> {
                        arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                        if(arr.isEmpty()){
                            doc_data();
                        }
                        else{
                            DefaultTableModel model  = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for(ChuongTrinhGiamGiaDTO x : arr){
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }
                    case "Tên chương trình" -> {

                        arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                        if(arr.isEmpty()){
                            doc_data();
                        }
                        else{
                            DefaultTableModel model  = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for(ChuongTrinhGiamGiaDTO x : arr){
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }
                    case "Ngày bắt đầu" -> {

                        arr = NVB.timkiem_mang(opt, t.setDateAsString(date_tim_txt));
                        if(arr.isEmpty()){
                            doc_data();
                        }
                        else{
                            DefaultTableModel model  = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for(ChuongTrinhGiamGiaDTO x : arr){
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }

                    case "Ngày kết thúc" -> {
                        arr = NVB.timkiem_mang(opt, t.setDateAsString(date_tim_txt));
                        if(arr.isEmpty()){
                            doc_data();
                        }
                        else{
                            DefaultTableModel model  = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for(ChuongTrinhGiamGiaDTO x : arr){
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }
                    default -> {
                    }
                }
            }
        
    }//GEN-LAST:event_them_btn29them_btn2MouseClicked

    private void them_btn29them_btn2ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btn29them_btn2ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btn29them_btn2ThongkebtnActionPerformed

    private void tim_txttim_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tim_txttim_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tim_txttim_txtActionPerformed

        public class Table_ghi {
    public Table_ghi(){};
    // Phương thức thêm dòng vào bảng
       private void addRowToTable(int idNhanVien, String ten, String start, String end) {
javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CTGG_table.getModel();
Object[] rowData = {idNhanVien, ten, start, end};
        model.addRow(rowData);
    }
       

       public boolean check_ten(String ten) throws SQLException{
       ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
       NVB.docDSCTGG();
       for(ChuongTrinhGiamGiaDTO NV : NVB.dsctgg){
       if(ten.equals(NV.getTen())){
       return false;  
       }
       }
       return true;
       }


    public  boolean isDateValid(String startDateStr, String endDateStr) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

            LocalDate startDate = LocalDate.parse(startDateStr, formatter);
            LocalDate endDate = LocalDate.parse(endDateStr, formatter);
            LocalDate today = LocalDate.now();

            // Kiểm tra nếu hôm nay chưa quá hạn
            return !today.isAfter(endDate);

        } catch (DateTimeParseException e) {
            // Xử lý lỗi nếu ngày không hợp lệ
            e.printStackTrace();
            return false;
        }
    }
    
        public  boolean isDateValid_1(String startDateStr, String endDateStr) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

            LocalDate startDate = LocalDate.parse(startDateStr, formatter);
            LocalDate endDate = LocalDate.parse(endDateStr, formatter);
            LocalDate today = LocalDate.now();

            // Kiểm tra nếu hôm nay chưa quá hạn
            return !startDate.isAfter(endDate);

        } catch (DateTimeParseException e) {
            // Xử lý lỗi nếu ngày không hợp lệ
            e.printStackTrace();
            return false;
        }
    }
    
    
            // Hàm chuyển đổi từ chuỗi "yyyy-MM-dd" sang Date và đặt cho JDateChooser
    public  Date setDateFromString(String dateString) throws ParseException {
         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateFormat.parse(dateString);
                return date;
    }
    
        // Hàm lấy giá trị từ JDateChooser và chuyển đổi sang chuỗi "yyyy-MM-dd"
    public String setDateAsString(JDateChooser dateChooser) {
        Date date = dateChooser.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            return dateFormat.format(date);
    }
    }
    
    
        public void doc_data(){

try {
    int SL_HC = 0;
    ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
    NVB.docDSCTGG();
    DefaultTableModel model  = (DefaultTableModel) CTGG_table.getModel();
    model.setRowCount(0); //xóa bảng        
       Table_ghi t = new Table_ghi();
        for (ChuongTrinhGiamGiaDTO x : NVB.dsctgg) {
                if(t.isDateValid(x.getStart(),x.getEnd())){
                SL_HC++;
                   t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                }            
        }
        label_SL.setText(SL_HC + " chương trình");
    } catch (SQLException e) {
        System.out.println("Lỗi khi thao tác với cơ sở dữ liệu: " + e.getMessage());
    }
}

            // ActionListener cho JComboBox
    private class ComboBoxActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String selected = (String) opt_txt.getSelectedItem();
            String opt;
            if(selected.equals("ID") || selected.equals("Tên chương trình")){
                opt = "card2";
            } else {
                opt = "card3";            
            }
            CardLayout cl = (CardLayout) (tim_panel.getLayout());
            cl.show(tim_panel, opt);
        }
    }
    
        
        
public static void main(String args[]) {

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            JFrame j = new JFrame();
     
            j.add(new CTGG_user());
            j.setSize(780, 600);
            j.setVisible(true);
        }
    });
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable CTGG_table;
    private com.toedter.calendar.JDateChooser date_tim_txt;
    private static javax.swing.JPanel formCTGG_txt;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JLabel label_SL;
    private static javax.swing.JComboBox<String> opt_txt;
    private javax.swing.JButton them_btn29;
    private javax.swing.JPanel tim_panel;
    private javax.swing.JTextField tim_txt;
    private javax.swing.JPanel timkiem_form;
    // End of variables declaration//GEN-END:variables
}
