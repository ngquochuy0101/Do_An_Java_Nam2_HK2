package GUI;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import BUS.ChuongTrinhGiamGiaBUS;
import BUS.NhanVienBUS;
import DTO.ChuongTrinhGiamGiaDTO;
import DAO.ChuongTrinhGiamGiaDAO;
import GUI.QLNV;
import com.toedter.calendar.JDateChooser;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author anhhu
 */
public class QLGG extends javax.swing.JPanel {

    private boolean data_check;

    /**
     * Creates new form NewJPanel
     */
    public QLGG() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formCTGG_txt = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        timkiem_form = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        them_btn29 = new javax.swing.JButton();
        label_SL = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        opt_txt = new javax.swing.JComboBox<>();
        tim_panel = new javax.swing.JPanel();
        tim_txt = new javax.swing.JTextField();
        date_tim_txt = new com.toedter.calendar.JDateChooser();
        ten_txt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        them_btn15 = new javax.swing.JButton();
        them_btn16 = new javax.swing.JButton();
        them_btn17 = new javax.swing.JButton();
        them_btn18 = new javax.swing.JButton();
        start_txt = new com.toedter.calendar.JDateChooser();
        end_txt = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        CTGG_table = new javax.swing.JTable();
        doc_btn = new javax.swing.JButton();
        javax.swing.JButton doc_btn12 = new javax.swing.JButton();
        javax.swing.JButton doc_btn13 = new javax.swing.JButton();

        formCTGG_txt.setBackground(new java.awt.Color(0, 255, 255));
        formCTGG_txt.setPreferredSize(new java.awt.Dimension(500, 500));

        jLabel51.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel51.setText("Quản lý giảm giá");
        jLabel51.setPreferredSize(new java.awt.Dimension(191, 20));

        timkiem_form.setBackground(new java.awt.Color(0, 255, 255));
        timkiem_form.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 204), new java.awt.Color(153, 255, 255))));

        jLabel52.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel52.setText("Tìm Kiếm");

        them_btn29.setBackground(new java.awt.Color(38, 170, 226));
        them_btn29.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn29.setForeground(new java.awt.Color(255, 255, 255));
        them_btn29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/loupe.png"))); // NOI18N
        them_btn29.setText("     Enter");
        them_btn29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        them_btn29.setIconTextGap(2);
        them_btn29.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn29.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn29.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btn29them_btn2MouseClicked(evt);
            }
        });
        them_btn29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btn29them_btn2ThongkebtnActionPerformed(evt);
            }
        });

        label_SL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label_SL.setForeground(new java.awt.Color(255, 51, 51));

        jPanel25.setLayout(new java.awt.CardLayout());

        opt_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên chương trình","Ngày bắt đầu","Ngày kết thúc"}));

        tim_panel.setLayout(new java.awt.CardLayout());

        tim_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tim_txttim_txtActionPerformed(evt);
            }
        });
        tim_panel.add(tim_txt, "card2");
        tim_panel.add(date_tim_txt, "card3");

        javax.swing.GroupLayout timkiem_formLayout = new javax.swing.GroupLayout(timkiem_form);
        timkiem_form.setLayout(timkiem_formLayout);
        timkiem_formLayout.setHorizontalGroup(
            timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(them_btn29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(opt_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(tim_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(32, 32, 32))
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_SL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timkiem_formLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        timkiem_formLayout.setVerticalGroup(
            timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tim_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opt_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(them_btn29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_SL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        //doc_data();
        opt_txt.addActionListener(new ComboBoxActionListener());

        ten_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ten_txtActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel14.setText("Tên chương trình: ");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel15.setText("Hiệu lực từ:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel16.setText("Hiệu lực đến: ");

        them_btn15.setBackground(new java.awt.Color(38, 170, 226));
        them_btn15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn15.setForeground(new java.awt.Color(255, 255, 255));
        them_btn15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/recycle.png"))); // NOI18N
        them_btn15.setText("    Hoàn Tác");
        them_btn15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        them_btn15.setIconTextGap(2);
        them_btn15.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn15.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn15.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btn15them_btn3MouseClicked(evt);
            }
        });
        them_btn15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btn15them_btn3ThongkebtnActionPerformed(evt);
            }
        });

        them_btn16.setBackground(new java.awt.Color(38, 170, 226));
        them_btn16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn16.setForeground(new java.awt.Color(255, 255, 255));
        them_btn16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/delete.png"))); // NOI18N
        them_btn16.setText("      Hủy");
        them_btn16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        them_btn16.setIconTextGap(2);
        them_btn16.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn16.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn16.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btn16them_btn4MouseClicked(evt);
            }
        });
        them_btn16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btn16them_btn4ThongkebtnActionPerformed(evt);
            }
        });

        them_btn17.setBackground(new java.awt.Color(38, 170, 226));
        them_btn17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn17.setForeground(new java.awt.Color(255, 255, 255));
        them_btn17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-write-32.png"))); // NOI18N
        them_btn17.setText("       Sửa");
        them_btn17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        them_btn17.setIconTextGap(2);
        them_btn17.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn17.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn17.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btn17them_btn5MouseClicked(evt);
            }
        });
        them_btn17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btn17them_btn5ThongkebtnActionPerformed(evt);
            }
        });

        them_btn18.setBackground(new java.awt.Color(38, 170, 226));
        them_btn18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn18.setForeground(new java.awt.Color(255, 255, 255));
        them_btn18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        them_btn18.setText("     Thêm");
        them_btn18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        them_btn18.setIconTextGap(2);
        them_btn18.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn18.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn18.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btn18them_btn6MouseClicked(evt);
            }
        });
        them_btn18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btn18them_btn6ThongkebtnActionPerformed(evt);
            }
        });

        // Tạo một lớp con kế thừa từ DefaultTableModel
        DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "Tên ", "Ngày hiệu lực", "Ngày hết hạn"
            }
        ) {
            // Ghi đè phương thức isCellEditable để ngăn chặn việc chỉnh sửa ô
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Ngăn chặn việc chỉnh sửa ô
            }
        };
        CTGG_table.setModel(model
        );
        jScrollPane2.setViewportView(CTGG_table);
        CTGG_table.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = CTGG_table.getSelectedRow();
                if (selectedRow != -1) {
                    try {
                        // Lấy giá trị của cột ID từ hàng được chọn
                        int id = (int) CTGG_table.getValueAt(selectedRow, 0);

                        // Lấy dữ liệu của nhân viên đã được chọn
                        ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
                        NVB.docDSCTGG();
                        ChuongTrinhGiamGiaDTO NV = NVB.timKiem(id);
                        Table_ghi t = new Table_ghi();

                        ten_txt.setText(NV.getTen());
                        start_txt.setDate(t.setDateFromString(NV.getStart()));
                        end_txt.setDate(t.setDateFromString(NV.getEnd()));
                    } catch (ParseException | SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });

        doc_btn.setBackground(new java.awt.Color(38, 170, 226));
        doc_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        doc_btn.setForeground(new java.awt.Color(255, 255, 255));
        doc_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/file.png"))); // NOI18N
        doc_btn.setText("      Đọc");
        doc_btn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        doc_btn.setIconTextGap(2);
        doc_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        doc_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        doc_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        doc_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doc_btnMouseClicked(evt);
            }
        });
        doc_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doc_btnThongkebtnActionPerformed(evt);
            }
        });

        doc_btn12.setBackground(new java.awt.Color(38, 170, 226));
        doc_btn12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        doc_btn12.setForeground(new java.awt.Color(255, 255, 255));
        doc_btn12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/export.png"))); // NOI18N
        doc_btn12.setText("  Xuất File");
        doc_btn12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        doc_btn12.setIconTextGap(2);
        doc_btn12.setMaximumSize(new java.awt.Dimension(132, 32));
        doc_btn12.setMinimumSize(new java.awt.Dimension(120, 30));
        doc_btn12.setPreferredSize(new java.awt.Dimension(132, 40));
        doc_btn12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doc_btn12MouseClicked(evt);
            }
        });
        doc_btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doc_btn12ThongkebtnActionPerformed(evt);
            }
        });

        doc_btn13.setBackground(new java.awt.Color(38, 170, 226));
        doc_btn13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        doc_btn13.setForeground(new java.awt.Color(255, 255, 255));
        doc_btn13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/archive (1).png"))); // NOI18N
        doc_btn13.setText("  Đọc File");
        doc_btn13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        doc_btn13.setIconTextGap(2);
        doc_btn13.setMaximumSize(new java.awt.Dimension(132, 32));
        doc_btn13.setMinimumSize(new java.awt.Dimension(120, 30));
        doc_btn13.setPreferredSize(new java.awt.Dimension(132, 40));
        doc_btn13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doc_btn13MouseClicked(evt);
            }
        });
        doc_btn13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doc_btn13ThongkebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formCTGG_txtLayout = new javax.swing.GroupLayout(formCTGG_txt);
        formCTGG_txt.setLayout(formCTGG_txtLayout);
        formCTGG_txtLayout.setHorizontalGroup(
            formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCTGG_txtLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formCTGG_txtLayout.createSequentialGroup()
                        .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formCTGG_txtLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(24, 24, 24)
                                .addComponent(ten_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCTGG_txtLayout.createSequentialGroup()
                                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)))
                        .addComponent(timkiem_form, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formCTGG_txtLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(doc_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(doc_btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(doc_btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formCTGG_txtLayout.createSequentialGroup()
                        .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formCTGG_txtLayout.createSequentialGroup()
                                .addComponent(them_btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(them_btn18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formCTGG_txtLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(start_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(end_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formCTGG_txtLayout.createSequentialGroup()
                                .addComponent(them_btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(them_btn17, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 293, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        formCTGG_txtLayout.setVerticalGroup(
            formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCTGG_txtLayout.createSequentialGroup()
                .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formCTGG_txtLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(ten_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(timkiem_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(start_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(end_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(them_btn15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(them_btn18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(them_btn16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(them_btn17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(formCTGG_txtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doc_btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doc_btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formCTGG_txt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1055, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(formCTGG_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void doc_btn12ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_btn12ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doc_btn12ThongkebtnActionPerformed

    private void doc_btn12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doc_btn12MouseClicked
        if (!data_check) {
            JOptionPane.showMessageDialog(this, "Chưa có dữ liệu trong bảng ");
        } else {
            try {
                XSSFWorkbook wb = new XSSFWorkbook();
                XSSFSheet sheet = wb.createSheet("DSNV");
                XSSFRow row = null;
                Cell cell = null;

                XSSFRow title = null;
                Cell cell_title = null;
                title = sheet.createRow(2);
                cell_title = title.createCell(0, CellType.STRING);
                cell_title.setCellValue("DANH SÁCH CHƯƠNG TRÌNH GIẢM GIÁ");

                row = sheet.createRow(3); // xuống 3 dòng
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("ID");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue("Tên chương trình");

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue("Ngày hiệu lực");

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue("Ngày hết hạn");

                ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
                NVB.docDSCTGG();
                int i = 0;
                for (ChuongTrinhGiamGiaDTO x : NVB.dsctgg) {
                    row = sheet.createRow(4 + i);

                    cell = row.createCell(0, CellType.STRING);
                    cell.setCellValue(x.getIdChuongTrinh());

                    cell = row.createCell(1, CellType.STRING);
                    cell.setCellValue(x.getTen());

                    cell = row.createCell(2, CellType.STRING);
                    cell.setCellValue(x.getStart());

                    cell = row.createCell(3, CellType.STRING);
                    cell.setCellValue(x.getEnd());
                    i++;
                }

                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn nơi lưu file");
                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    File fileToSave = fileChooser.getSelectedFile();
                    if (!fileToSave.getAbsolutePath().endsWith(".xlsx")) {
                        fileToSave = new File(fileToSave + ".xlsx");
                    }
                    try (FileOutputStream fileOut = new FileOutputStream(fileToSave)) {
                        wb.write(fileOut);
                    }
                    JOptionPane.showMessageDialog(this, "Đã in file thành công ");
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            } catch (SQLException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_doc_btn12MouseClicked

    private void doc_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doc_btnThongkebtnActionPerformed

    private void doc_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doc_btnMouseClicked
        doc_data();
        data_check = true;
    }//GEN-LAST:event_doc_btnMouseClicked

    private void them_btn17them_btn5ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btn17them_btn5ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btn17them_btn5ThongkebtnActionPerformed

    private void them_btn17them_btn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btn17them_btn5MouseClicked
        Table_ghi t = new Table_ghi();
        ChuongTrinhGiamGiaBUS CTGGB = new ChuongTrinhGiamGiaBUS();
        try {
            CTGGB.docDSCTGG();
        } catch (SQLException ex) {
            Logger.getLogger(QLGG.class.getName()).log(Level.SEVERE, null, ex);
        }
        int ID = 0;
        try {
            ID = getSelectedRowID(CTGG_table);
        } catch (SQLException ex) {
            Logger.getLogger(QLGG.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (ID == -1) {
            JOptionPane.showMessageDialog(null, "Hãy Chọn dòng cần sửa", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            String ten = ten_txt.getText();
            String start = t.setDateAsString(start_txt);
            String end = t.setDateAsString(end_txt);

            if (!t.isDateValid_1(start, end)) {
                JOptionPane.showMessageDialog(null, "Ngày hết hạn phải cách ngàu bắt đầu ít nhất 1 ngày!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    ChuongTrinhGiamGiaDTO CTGG_sua = CTGGB.timKiem(ID);
                    CTGG_sua.setTen(ten);
                    CTGG_sua.setIdChuongTrinh(ID);
                    CTGG_sua.setStart(start);
                    CTGG_sua.setEnd(end);

                    CTGGB.capNhat(CTGG_sua);
                    doc_data();
                } catch (SQLException ex) {
                    Logger.getLogger(QLGG.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_them_btn17them_btn5MouseClicked

    private void them_btn16them_btn4ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btn16them_btn4ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btn16them_btn4ThongkebtnActionPerformed

    private void them_btn16them_btn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btn16them_btn4MouseClicked
        int ID = 0;
        try {
            ID = getSelectedRowID(CTGG_table);
        } catch (SQLException ex) {
            Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ID == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn một chương trình muốn hủy", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
            ChuongTrinhGiamGiaDTO CTGG_huy = new ChuongTrinhGiamGiaDTO();
            try {
                CTGG_huy.setTen(ten_txt.getText());
                CTGG_huy.setIdChuongTrinh(ID);
                CTGG_huy.setStart("1000-01-01");
                CTGG_huy.setEnd("1000-01-01");

                NVB.docDSCTGG();
                NVB.capNhat(CTGG_huy);
            } catch (SQLException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            }
            doc_data();
        }
    }//GEN-LAST:event_them_btn16them_btn4MouseClicked

    private void them_btn15them_btn3ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btn15them_btn3ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btn15them_btn3ThongkebtnActionPerformed

    private void them_btn15them_btn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btn15them_btn3MouseClicked
        ten_txt.setText("");

        // Lấy ngày hiện tại
        Calendar calendar = Calendar.getInstance();
        Date currentDate = calendar.getTime();

        // Đặt giá trị cho JCalendar
        start_txt.setDate(currentDate);
        end_txt.setDate(currentDate);
    }//GEN-LAST:event_them_btn15them_btn3MouseClicked

    private void tim_txttim_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tim_txttim_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tim_txttim_txtActionPerformed

    private void them_btn29them_btn2ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btn29them_btn2ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btn29them_btn2ThongkebtnActionPerformed

    private void them_btn29them_btn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btn29them_btn2MouseClicked
        if (!data_check) {
            JOptionPane.showMessageDialog(null, "Chưa có dữ liệu trong bảng", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            Table_ghi t = new Table_ghi();
            if (tim_txt.getText().equals("") && opt_txt.getSelectedItem().equals("ID") && opt_txt.getSelectedItem().equals("Tên chương trình")) {
                doc_data();
            } else {
                ArrayList<ChuongTrinhGiamGiaDTO> arr = new ArrayList<>();
                ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
                try {
                    NVB.docDSCTGG();
                } catch (SQLException ex) {
                    Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
                }
                String opt = (String) opt_txt.getSelectedItem();

                switch (opt) {
                    case "ID" -> {
                        arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                        if (arr.isEmpty()) {
                            doc_data();
                        } else {
                            DefaultTableModel model = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for (ChuongTrinhGiamGiaDTO x : arr) {
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }
                    case "Tên chương trình" -> {

                        arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                        if (arr.isEmpty()) {
                            doc_data();
                        } else {
                            DefaultTableModel model = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for (ChuongTrinhGiamGiaDTO x : arr) {
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }
                    case "Ngày bắt đầu" -> {

                        arr = NVB.timkiem_mang(opt, t.setDateAsString(date_tim_txt));
                        if (arr.isEmpty()) {
                            doc_data();
                        } else {
                            DefaultTableModel model = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for (ChuongTrinhGiamGiaDTO x : arr) {
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }

                    case "Ngày kết thúc" -> {
                        arr = NVB.timkiem_mang(opt, t.setDateAsString(date_tim_txt));
                        if (arr.isEmpty()) {
                            doc_data();
                        } else {
                            DefaultTableModel model = (DefaultTableModel) CTGG_table.getModel();
                            model.setRowCount(0); //xóa bảng

                            for (ChuongTrinhGiamGiaDTO x : arr) {
                                if (t.isDateValid(x.getStart(), x.getEnd())) {
                                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                                }
                            }

                        }
                    }
                    default -> {
                    }
                }
            }
        }
    }//GEN-LAST:event_them_btn29them_btn2MouseClicked

    private void ten_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ten_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ten_txtActionPerformed

    private void them_btn18them_btn6ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btn18them_btn6ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btn18them_btn6ThongkebtnActionPerformed

    private void them_btn18them_btn6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btn18them_btn6MouseClicked
        try {
            Table_ghi t = new Table_ghi();

            if (t.check()) {
                JFrame j = new JFrame();
                j.add(new form_them_CTGG());
                j.setSize(800, 630);
                j.setVisible(true);
                j.setLocationRelativeTo(null); // Căn giữa màn hình

                ChuongTrinhGiamGiaBUS CTGGBUS = new ChuongTrinhGiamGiaBUS();
                CTGGBUS.docDSCTGG();

                ChuongTrinhGiamGiaDTO x = new ChuongTrinhGiamGiaDTO();
                x.setTen(ten_txt.getText());
                x.setStart(t.setDateAsString(start_txt));
                x.setEnd(t.setDateAsString(end_txt));

                CTGGBUS.them(x);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QLGG.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_them_btn18them_btn6MouseClicked

    private void doc_btn13ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_btn13ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doc_btn13ThongkebtnActionPerformed

    private void doc_btn13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doc_btn13MouseClicked
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn file Excel");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String excelFilePath = selectedFile.getAbsolutePath();

            try (FileInputStream fis = new FileInputStream(excelFilePath); Workbook workbook = new XSSFWorkbook(fis)) {

                Sheet sheet = workbook.getSheetAt(0);
                int numRows = sheet.getPhysicalNumberOfRows() - 1; // Trừ đi 1 để bỏ qua dòng tiêu đề
                int numCols = sheet.getRow(0).getPhysicalNumberOfCells();

                String[][] data = new String[numRows][numCols];

                for (int i = 1; i <= numRows; i++) { // Bắt đầu từ hàng thứ 2 (index 1)
                    Row row = sheet.getRow(i);
                    if (row != null) {
                        for (int j = 0; j < numCols; j++) {
                            Cell cell = row.getCell(j);
                            if (cell != null) {
                                data[i - 1][j] = cell.toString(); // Chuyển đổi trực tiếp sang chuỗi
                            } else {
                                data[i - 1][j] = "";
                            }
                        }
                    }
                }

                ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
                Table_ghi t = new Table_ghi();

                for (int i = 0; i < numRows; i++) {
                    System.out.print(i);
                    if (t.check_ten(data[i][0])) {
                        ChuongTrinhGiamGiaDTO NV = new ChuongTrinhGiamGiaDTO();
                        NVB.docDSCTGG();
                        NV.setTen(data[i][0]);
                        NV.setStart(data[i][1].trim());
                        NV.setEnd(data[i][2].trim());

                        NVB.them(NV);
                    }
                }
                doc_data();
                data_check = true;
                JOptionPane.showMessageDialog(this, "Đã đọc file thành công");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(QLGG.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_doc_btn13MouseClicked

    public class Table_ghi {

        public Table_ghi() {
        }

        ;
    // Phương thức thêm dòng vào bảng
       private void addRowToTable(int idNhanVien, String ten, String start, String end) {
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CTGG_table.getModel();
            Object[] rowData = {idNhanVien, ten, start, end};
            model.addRow(rowData);
        }

        private boolean check() throws SQLException {
            String ten = ten_txt.getText();
            Date start = (Date) start_txt.getModel().getValue();
            Date end = (Date) end_txt.getModel().getValue();

            if (start != null && end != null && !ten.equals("")) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String start_f = dateFormat.format(start);
                String end_f = dateFormat.format(end);

                LocalDate startDate = LocalDate.parse(start_f);
                LocalDate endDate = LocalDate.parse(end_f);
                boolean check = endDate.isAfter(startDate.plusDays(1));

                if (check) {
                    return true;
                } else {
                    JOptionPane.showMessageDialog(null, "Ngày hết hạn phải cách ngày bắt đầu ít nhất 1 ngày", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return false; // Ngày kết thúc ít nhất là một ngày sau ngày bắt đầu
                }
                // Ngày kết thúc không hợp lệ
            } else {
                // Một trong hai ngày bắt đầu hoặc kết thúc không hợp lệ
                JOptionPane.showMessageDialog(null, "Hãy nhập tên chương trình", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        public boolean check_ten(String ten) throws SQLException {
            ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
            NVB.docDSCTGG();
            for (ChuongTrinhGiamGiaDTO NV : NVB.dsctgg) {
                if (ten.equals(NV.getTen())) {
                    return false;
                }
            }
            return true;
        }

        public boolean isDateValid(String startDateStr, String endDateStr) {
            try {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                LocalDate startDate = LocalDate.parse(startDateStr, formatter);
                LocalDate endDate = LocalDate.parse(endDateStr, formatter);
                LocalDate today = LocalDate.now();

                // Kiểm tra nếu hôm nay chưa quá hạn
                return !today.isAfter(endDate);

            } catch (DateTimeParseException e) {
                // Xử lý lỗi nếu ngày không hợp lệ
                e.printStackTrace();
                return false;
            }
        }

        public boolean isDateValid_1(String startDateStr, String endDateStr) {
            try {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                LocalDate startDate = LocalDate.parse(startDateStr, formatter);
                LocalDate endDate = LocalDate.parse(endDateStr, formatter);
                LocalDate today = LocalDate.now();

                // Kiểm tra nếu hôm nay chưa quá hạn
                return !startDate.isAfter(endDate);

            } catch (DateTimeParseException e) {
                // Xử lý lỗi nếu ngày không hợp lệ
                e.printStackTrace();
                return false;
            }
        }

        // Hàm chuyển đổi từ chuỗi "yyyy-MM-dd" sang Date và đặt cho JDateChooser
        public Date setDateFromString(String dateString) throws ParseException {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateFormat.parse(dateString);
            return date;
        }

        // Hàm lấy giá trị từ JDateChooser và chuyển đổi sang chuỗi "yyyy-MM-dd"
        public String setDateAsString(JDateChooser dateChooser) {
            Date date = dateChooser.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            return dateFormat.format(date);
        }
    }

    public void doc_data() {

        try {
            int SL_HC = 0;
            ChuongTrinhGiamGiaBUS NVB = new ChuongTrinhGiamGiaBUS();
            NVB.docDSCTGG();
            DefaultTableModel model = (DefaultTableModel) CTGG_table.getModel();
            model.setRowCount(0); //xóa bảng        
            Table_ghi t = new Table_ghi();
            for (ChuongTrinhGiamGiaDTO x : NVB.dsctgg) {
                if (t.isDateValid(x.getStart(), x.getEnd())) {
                    SL_HC++;
                    t.addRowToTable(x.getIdChuongTrinh(), x.getTen(), x.getStart(), x.getEnd());
                }
            }
            label_SL.setText(SL_HC + " chương trình");
        } catch (SQLException e) {
            System.out.println("Lỗi khi thao tác với cơ sở dữ liệu: " + e.getMessage());
        }
    }

//hàm lấy ra id của dòng dc chọn
    public int getSelectedRowID(JTable table) throws SQLException {
        int selectedRow = table.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) table.getValueAt(selectedRow, 0);
            return id; // Cột "ID" là cột đầu tiên (index 0)
        } else {
            return -1;
        }
    }

    // ActionListener cho JComboBox
    private class ComboBoxActionListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String selected = (String) opt_txt.getSelectedItem();
            String opt;
            if (selected.equals("ID") || selected.equals("Tên chương trình")) {
                opt = "card2";
            } else {
                opt = "card3";
            }
            CardLayout cl = (CardLayout) (tim_panel.getLayout());
            cl.show(tim_panel, opt);
        }
    }

    public static void main(String args[]) {


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame j = new JFrame();

                j.add(new QLGG());
                j.setSize(780, 600);
                j.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable CTGG_table;
    private com.toedter.calendar.JDateChooser date_tim_txt;
    private javax.swing.JButton doc_btn;
    private static com.toedter.calendar.JDateChooser end_txt;
    private static javax.swing.JPanel formCTGG_txt;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JLabel label_SL;
    private static javax.swing.JComboBox<String> opt_txt;
    private static com.toedter.calendar.JDateChooser start_txt;
    private static javax.swing.JTextField ten_txt;
    private javax.swing.JButton them_btn15;
    private javax.swing.JButton them_btn16;
    private javax.swing.JButton them_btn17;
    private javax.swing.JButton them_btn18;
    private javax.swing.JButton them_btn29;
    private javax.swing.JPanel tim_panel;
    private javax.swing.JTextField tim_txt;
    private javax.swing.JPanel timkiem_form;
    // End of variables declaration//GEN-END:variables
}
