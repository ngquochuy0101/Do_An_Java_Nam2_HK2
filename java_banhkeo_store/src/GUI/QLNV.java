package GUI;

import DTO.NhanVienDTO;
import BUS.NhanVienBUS;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author anhhu
 */
public class QLNV extends javax.swing.JPanel {

    private boolean data_check;

    /**
     * Creates new form QLNV1
     */
    public QLNV() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainchinh = new javax.swing.JPanel();
        timkiem_form = new javax.swing.JPanel();
        tim_txt = new javax.swing.JTextField();
        tim_btn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        label_SL = new javax.swing.JLabel();
        opt_txt = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Ten_txt = new javax.swing.JTextField();
        Ho_txt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CCCD_txt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Thang_txt = new javax.swing.JComboBox<>();
        Ngay_txt = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        Nam_txt = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        ChucVu_txt = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        SDT_txt = new javax.swing.JTextField();
        them_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        xoa_btn = new javax.swing.JButton();
        hoantac_btn = new javax.swing.JButton();
        sua_btn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        MK_txt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Luong_txt = new javax.swing.JComboBox<>();
        GT_txt = new javax.swing.JComboBox<>();
        xuat_btn = new javax.swing.JButton();
        doc_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        NhanVienBUS NV = new NhanVienBUS();
        NV_table = new javax.swing.JTable();
        nhap_btn1 = new javax.swing.JButton();

        mainchinh.setBackground(new java.awt.Color(0, 255, 255));
        mainchinh.setForeground(new java.awt.Color(51, 51, 51));
        mainchinh.setPreferredSize(new java.awt.Dimension(760, 470));

        timkiem_form.setBackground(new java.awt.Color(0, 255, 255));
        timkiem_form.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 204), new java.awt.Color(153, 255, 255))));

        tim_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tim_txtActionPerformed(evt);
            }
        });

        tim_btn.setBackground(new java.awt.Color(38, 170, 226));
        tim_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tim_btn.setForeground(new java.awt.Color(255, 255, 255));
        tim_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/loupe.png"))); // NOI18N
        tim_btn.setText(" Enter");
        tim_btn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tim_btn.setIconTextGap(2);
        tim_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        tim_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        tim_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        tim_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tim_btnMouseClicked(evt);
            }
        });
        tim_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tim_btnThongkebtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel4.setText("Tìm Kiếm");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        label_SL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label_SL.setForeground(new java.awt.Color(255, 51, 51));

        opt_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "CCCD", "SDT","Họ Tên","Mật Khẩu"}));
        opt_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opt_txtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout timkiem_formLayout = new javax.swing.GroupLayout(timkiem_form);
        timkiem_form.setLayout(timkiem_formLayout);
        timkiem_formLayout.setHorizontalGroup(
            timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(tim_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(label_SL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(timkiem_formLayout.createSequentialGroup()
                        .addComponent(opt_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tim_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(101, 101, 101))
        );
        timkiem_formLayout.setVerticalGroup(
            timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiem_formLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opt_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tim_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(timkiem_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tim_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_SL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        //doc_data();

        jLabel7.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel7.setText("Họ Lót:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel8.setText("Tên: ");

        Ten_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ten_txtActionPerformed(evt);
            }
        });

        Ho_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ho_txtActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel9.setText("CCCD:");

        CCCD_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CCCD_txtActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel10.setText("Lương/giờ: ");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel11.setText("dd/mm/yyyy");

        Thang_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));
        Thang_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Thang_txtActionPerformed(evt);
            }
        });

        Ngay_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        Ngay_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ngay_txtActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel12.setText("Ngày sinh:");

        Nam_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "" }));
        Nam_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nam_txtActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel13.setText("Chức vụ: ");

        ChucVu_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhân Viên", "Admin" }));
        ChucVu_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChucVu_txtActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel14.setText("SDT:");

        SDT_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDT_txtActionPerformed(evt);
            }
        });

        them_btn.setBackground(new java.awt.Color(38, 170, 226));
        them_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them_btn.setForeground(new java.awt.Color(255, 255, 255));
        them_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        them_btn.setText("Thêm ");
        them_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        them_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        them_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        them_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                them_btnMouseClicked(evt);
            }
        });
        them_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them_btnThongkebtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        xoa_btn.setBackground(new java.awt.Color(38, 170, 226));
        xoa_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        xoa_btn.setForeground(new java.awt.Color(255, 255, 255));
        xoa_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/delete.png"))); // NOI18N
        xoa_btn.setText("Xóa");
        xoa_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        xoa_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        xoa_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        xoa_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xoa_btnMouseClicked(evt);
            }
        });
        xoa_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoa_btnThongkebtnActionPerformed(evt);
            }
        });

        hoantac_btn.setBackground(new java.awt.Color(38, 170, 226));
        hoantac_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hoantac_btn.setForeground(new java.awt.Color(255, 255, 255));
        hoantac_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/circle-of-two-clockwise-arrows-rotation.png"))); // NOI18N
        hoantac_btn.setText("Hoàn Tác");
        hoantac_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        hoantac_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        hoantac_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        hoantac_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hoantac_btnMouseClicked(evt);
            }
        });
        hoantac_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoantac_btnThongkebtnActionPerformed(evt);
            }
        });

        sua_btn.setBackground(new java.awt.Color(38, 170, 226));
        sua_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sua_btn.setForeground(new java.awt.Color(255, 255, 255));
        sua_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-write-32.png"))); // NOI18N
        sua_btn.setText("Sửa");
        sua_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        sua_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        sua_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        sua_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sua_btnMouseClicked(evt);
            }
        });
        sua_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sua_btnThongkebtnActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setText("Quản Lý Nhân Viên");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel16.setText("Mật khẩu: ");

        MK_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MK_txtActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel17.setText("Giới Tính:");

        Luong_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20000", "25000"}));
        Luong_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Luong_txtActionPerformed(evt);
            }
        });

        GT_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác"}));
        GT_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GT_txtMouseClicked(evt);
            }
        });
        GT_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GT_txtActionPerformed(evt);
            }
        });

        xuat_btn.setBackground(new java.awt.Color(38, 170, 226));
        xuat_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        xuat_btn.setForeground(new java.awt.Color(255, 255, 255));
        xuat_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/export.png"))); // NOI18N
        xuat_btn.setText("Xuất File");
        xuat_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        xuat_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        xuat_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        xuat_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xuat_btnMouseClicked(evt);
            }
        });
        xuat_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuat_btnThongkebtnActionPerformed(evt);
            }
        });

        doc_btn.setBackground(new java.awt.Color(38, 170, 226));
        doc_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        doc_btn.setForeground(new java.awt.Color(255, 255, 255));
        doc_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/archive (1).png"))); // NOI18N
        doc_btn.setText("Đọc");
        doc_btn.setMaximumSize(new java.awt.Dimension(132, 32));
        doc_btn.setMinimumSize(new java.awt.Dimension(120, 30));
        doc_btn.setPreferredSize(new java.awt.Dimension(132, 40));
        doc_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doc_btnMouseClicked(evt);
            }
        });

        // Tạo một lớp con kế thừa từ DefaultTableModel
        DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Nhân Viên", "CCCD","Mật khẩu", "Họ&Tên", "SDT", "Giới Tính", "Ngày Sinh", "Chức vụ", "Lương Giờ"
            }
        ) {
            // Ghi đè phương thức isCellEditable để ngăn chặn việc chỉnh sửa ô
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Ngăn chặn việc chỉnh sửa ô
            }
        };
        NV_table.setModel(model
        );
        NV_table.setGridColor(new java.awt.Color(102, 255, 255));
        NV_table.setSelectionBackground(new java.awt.Color(102, 255, 255));
        NV_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NV_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(NV_table);
        NV_table.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = NV_table.getSelectedRow();
                if (selectedRow != -1) {
                    try {
                        // Lấy giá trị của cột ID từ hàng được chọn
                        int id = (int) NV_table.getValueAt(selectedRow, 0);

                        // Lấy dữ liệu của nhân viên đã được chọn
                        NhanVienBUS NVB = new NhanVienBUS();
                        NVB.docDSNV();
                        NhanVienDTO NV = NVB.timKiem(id);

                        Ho_txt.setText(NV.getHoTenLot());
                        Ten_txt.setText(NV.getTen());
                        CCCD_txt.setText(NV.getCCCD());
                        SDT_txt.setText(NV.getSDT());
                        Luong_txt.setSelectedItem(NV.getLuongThang());
                        switch (NV.getGioiTinh()) {
                            case 1 -> opt_txt.setSelectedItem("Nam");
                            case 0 -> opt_txt.setSelectedItem("Nữ");
                            default -> opt_txt.setSelectedItem("Khác");
                        }

                        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                        Date date = dateFormat.parse(NV.getNgaySinh());

                        SimpleDateFormat dayFormat = new SimpleDateFormat("dd");
                        SimpleDateFormat monthFormat = new SimpleDateFormat("MM");
                        SimpleDateFormat yearFormat = new SimpleDateFormat("yyyy");

                        String day = dayFormat.format(date);
                        String month = monthFormat.format(date);
                        String year = yearFormat.format(date);

                        Nam_txt.setSelectedItem(year);
                        Thang_txt.setSelectedItem(month);
                        Ngay_txt.setSelectedItem(day);

                        switch (NV.getChucVu()) {
                            case 1 -> ChucVu_txt.setSelectedItem("Nhân Viên");
                            default -> ChucVu_txt.setSelectedItem("Admin");
                        }

                        MK_txt.setText(NV.getMK());
                    } catch (ParseException | SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });

        nhap_btn1.setBackground(new java.awt.Color(38, 170, 226));
        nhap_btn1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nhap_btn1.setForeground(new java.awt.Color(255, 255, 255));
        nhap_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/file.png"))); // NOI18N
        nhap_btn1.setText("Đọc File");
        nhap_btn1.setMaximumSize(new java.awt.Dimension(132, 32));
        nhap_btn1.setMinimumSize(new java.awt.Dimension(120, 30));
        nhap_btn1.setPreferredSize(new java.awt.Dimension(132, 40));
        nhap_btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nhap_btn1MouseClicked(evt);
            }
        });
        nhap_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhap_btn1ThongkebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainchinhLayout = new javax.swing.GroupLayout(mainchinh);
        mainchinh.setLayout(mainchinhLayout);
        mainchinhLayout.setHorizontalGroup(
            mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainchinhLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainchinhLayout.createSequentialGroup()
                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainchinhLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Ho_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Ten_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainchinhLayout.createSequentialGroup()
                                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainchinhLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CCCD_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SDT_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(mainchinhLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(70, 70, 70)
                        .addComponent(timkiem_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainchinhLayout.createSequentialGroup()
                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainchinhLayout.createSequentialGroup()
                                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainchinhLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(Ngay_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Thang_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainchinhLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ChucVu_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainchinhLayout.createSequentialGroup()
                                        .addComponent(Nam_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(GT_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11)))
                                    .addGroup(mainchinhLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MK_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Luong_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(mainchinhLayout.createSequentialGroup()
                                    .addGap(62, 62, 62)
                                    .addComponent(doc_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(xuat_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nhap_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(mainchinhLayout.createSequentialGroup()
                                    .addComponent(them_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(hoantac_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(xoa_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(sua_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(mainchinhLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainchinhLayout.createSequentialGroup()
                    .addGap(246, 246, 246)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(756, Short.MAX_VALUE)))
        );
        mainchinhLayout.setVerticalGroup(
            mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainchinhLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainchinhLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(timkiem_form, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainchinhLayout.createSequentialGroup()
                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainchinhLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainchinhLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Ho_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(Ten_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(CCCD_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SDT_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(GT_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ngay_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Thang_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nam_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChucVu_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MK_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(Luong_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(them_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoantac_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xoa_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sua_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xuat_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nhap_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(mainchinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainchinhLayout.createSequentialGroup()
                    .addGap(152, 152, 152)
                    .addComponent(jLabel17)
                    .addContainerGap(382, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainchinh, javax.swing.GroupLayout.PREFERRED_SIZE, 852, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainchinh, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void opt_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opt_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opt_txtActionPerformed

    private void sua_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sua_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sua_btnThongkebtnActionPerformed

    private void hoantac_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoantac_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hoantac_btnThongkebtnActionPerformed

    private void xoa_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoa_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xoa_btnThongkebtnActionPerformed

    private void them_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_them_btnThongkebtnActionPerformed

    private void SDT_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDT_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SDT_txtActionPerformed

    private void Nam_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nam_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nam_txtActionPerformed

    private void Ngay_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ngay_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ngay_txtActionPerformed

    private void Thang_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Thang_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Thang_txtActionPerformed

    private void CCCD_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CCCD_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CCCD_txtActionPerformed

    private void Ho_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ho_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ho_txtActionPerformed

    private void Ten_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ten_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ten_txtActionPerformed

    private void tim_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tim_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tim_btnThongkebtnActionPerformed

    private void tim_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tim_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tim_txtActionPerformed

    private void them_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_them_btnMouseClicked
        if (!data_check) {
            JOptionPane.showMessageDialog(null, "Chưa có dữ liệu trong bảng", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            Table_ghi t = new Table_ghi();
            try {
                if (t.check()) {
                    NhanVienDTO Nv = new NhanVienDTO();
                    Nv.setCCCD(CCCD_txt.getText());

                    if (ChucVu_txt.getSelectedItem().equals("Nhân Viên")) {
                        Nv.setChucVu(1);
                    } else {
                        Nv.setChucVu(0);
                    }

                    Nv.setHoTenLot(Ho_txt.getText());
                    Nv.setTen(Ten_txt.getText());
                    Nv.setMK(MK_txt.getText());
                    Nv.setNgaySinh(Nam_txt.getSelectedItem() + "-" + Thang_txt.getSelectedItem() + "-" + Ngay_txt.getSelectedItem());
                    Nv.setSDT(SDT_txt.getText());
                    Nv.setTrangThai(1);
                    Nv.setLuongThang(Integer.parseInt((String) Luong_txt.getSelectedItem()));

                    if (opt_txt.getSelectedItem() == "Nam") {
                        Nv.setGioiTinh(1);
                    } else if (opt_txt.getSelectedItem() == "Nữ") {
                        Nv.setGioiTinh(0);
                    } else {
                        Nv.setGioiTinh(2);
                    }
                    try {
                        NhanVienBUS NVB = new NhanVienBUS();
                        NVB.docDSNV();
                        NVB.them(Nv);
                        doc_data();
                        //cập nhật lại bảng
                    } catch (SQLException ex) {
                        Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_them_btnMouseClicked

    private void ChucVu_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChucVu_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChucVu_txtActionPerformed

    private void MK_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MK_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MK_txtActionPerformed

    private void hoantac_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hoantac_btnMouseClicked
        CCCD_txt.setText("");
        Ten_txt.setText("");
        Ho_txt.setText("");
        SDT_txt.setText("");
        MK_txt.setText("");
        Nam_txt.setSelectedItem("1970");
        Thang_txt.setSelectedItem("01");
        Ngay_txt.setSelectedItem("01");
        opt_txt.setSelectedItem("Nam");
        ChucVu_txt.setSelectedItem("Nhân Viên");
    }//GEN-LAST:event_hoantac_btnMouseClicked

    private void xoa_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xoa_btnMouseClicked
        int ID = 0;
        try {
            ID = getSelectedRowID(NV_table);
        } catch (SQLException ex) {
            Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ID == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn một nhân viên cần xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            NhanVienBUS NVB = new NhanVienBUS();
            try {
                NVB.docDSNV();
                NhanVienDTO NV_xoa = NVB.timKiem(ID);
                NV_xoa.setTrangThai(0);
                NVB.capNhat(NV_xoa);
            } catch (SQLException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            }
            doc_data();
        }
    }//GEN-LAST:event_xoa_btnMouseClicked

    private void sua_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sua_btnMouseClicked
        int ID = 0;
        try {
            ID = getSelectedRowID(NV_table);
        } catch (SQLException ex) {
            Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ID == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn một nhân viên cần sửa", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {

            if (SDT_txt.getText().equals("") || Ho_txt.getText().equals("") || Ten_txt.getText().equals("") || opt_txt.getSelectedItem().equals("") || CCCD_txt.getText().equals("") || MK_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "không được để trống thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);

            } else {
                NhanVienBUS NVB = new NhanVienBUS();
                NhanVienDTO nv = new NhanVienDTO();
                nv.setIdNhanVien(ID);
                nv.setCCCD(CCCD_txt.getText());
                nv.setHoTenLot(Ho_txt.getText());
                nv.setTen(Ten_txt.getText());
                nv.setSDT(SDT_txt.getText());
                nv.setNgaySinh(Nam_txt.getSelectedItem() + "-" + Thang_txt.getSelectedItem() + "-" + Ngay_txt.getSelectedItem());
                nv.setMK(MK_txt.getText());
                nv.setLuongThang(Integer.parseInt((String) Luong_txt.getSelectedItem()));
                nv.setTrangThai(1);
                if (ChucVu_txt.getSelectedItem().equals("Nhân Viên")) {
                    nv.setChucVu(1);
                } else {
                    nv.setChucVu(0);
                }

                if (GT_txt.getSelectedItem().equals("Nam")) {
                    nv.setGioiTinh(1);
                } else if (GT_txt.getSelectedItem().equals("Nữ")) {
                    nv.setGioiTinh(0);
                } else {
                    nv.setGioiTinh(2);

                }

                try {
                    NVB.docDSNV();
                    NVB.capNhat(nv);
                    doc_data();

                } catch (SQLException ex) {
                    Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_sua_btnMouseClicked

    private void Luong_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Luong_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Luong_txtActionPerformed

    private void tim_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tim_btnMouseClicked
        if (data_check) {
            if (tim_txt.getText().equals("")) {
                doc_data();
            } else {
                ArrayList<NhanVienDTO> arr = new ArrayList<>();
                NhanVienBUS NVB = new NhanVienBUS();
                try {
                    NVB.docDSNV();
                } catch (SQLException ex) {
                    Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
                }
                String opt = (String) opt_txt.getSelectedItem();

                if (opt.equals("ID")) {
                    arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                    if (arr.isEmpty()) {
                        doc_data();
                    } else {
                        Table_ghi t = new Table_ghi();
                        DefaultTableModel model = (DefaultTableModel) NV_table.getModel();
                        model.setRowCount(0); //xóa bảng 

                        for (NhanVienDTO x : arr) {
                            String CV;
                            String GT;

                            if (x.getChucVu() == 1) {
                                CV = "Nhân VIên";
                            } else {
                                CV = "Admin";
                            }

                            GT = switch (x.getGioiTinh()) {
                                case 1 ->
                                    "Nam";
                                case 0 ->
                                    "Nữ";
                                default ->
                                    "Khác";
                            };

                            if (x.getTrangThai() == 1) {
                                t.addRowToTable(x.getIdNhanVien(), x.getCCCD(), x.getMK(), x.getHoTenLot() + " " + x.getTen(), x.getSDT(), GT, x.getNgaySinh(), CV, x.getLuongThang());
                            }
                        }

                    }
                } else if (opt.equals("CCCD")) {
                    arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                    if (arr.isEmpty()) {
                        doc_data();
                    } else {
                        Table_ghi t = new Table_ghi();
                        DefaultTableModel model = (DefaultTableModel) NV_table.getModel();
                        model.setRowCount(0); //xóa bảng 

                        for (NhanVienDTO x : arr) {
                            String CV;
                            String GT;

                            if (x.getChucVu() == 1) {
                                CV = "Nhân VIên";
                            } else {
                                CV = "Admin";
                            }

                            GT = switch (x.getGioiTinh()) {
                                case 1 ->
                                    "Nam";
                                case 0 ->
                                    "Nữ";
                                default ->
                                    "Khác";
                            };

                            if (x.getTrangThai() == 1) {
                                t.addRowToTable(x.getIdNhanVien(), x.getCCCD(), x.getMK(), x.getHoTenLot() + " " + x.getTen(), x.getSDT(), GT, x.getNgaySinh(), CV, x.getLuongThang());
                            }
                        }

                    }
                } else if (opt.equals("Họ Tên")) {
                    arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                    if (arr.isEmpty()) {
                        doc_data();
                    } else {
                        Table_ghi t = new Table_ghi();
                        DefaultTableModel model = (DefaultTableModel) NV_table.getModel();
                        model.setRowCount(0); //xóa bảng 

                        for (NhanVienDTO x : arr) {
                            String CV;
                            String GT;

                            if (x.getChucVu() == 1) {
                                CV = "Nhân VIên";
                            } else {
                                CV = "Admin";
                            }

                            GT = switch (x.getGioiTinh()) {
                                case 1 ->
                                    "Nam";
                                case 0 ->
                                    "Nữ";
                                default ->
                                    "Khác";
                            };

                            if (x.getTrangThai() == 1) {
                                t.addRowToTable(x.getIdNhanVien(), x.getCCCD(), x.getMK(), x.getHoTenLot() + " " + x.getTen(), x.getSDT(), GT, x.getNgaySinh(), CV, x.getLuongThang());
                            }
                        }

                    }
                } else if (opt.equals("Mật Khẩu")) {
                    arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                    if (arr.isEmpty()) {
                        doc_data();
                    } else {
                        Table_ghi t = new Table_ghi();
                        DefaultTableModel model = (DefaultTableModel) NV_table.getModel();
                        model.setRowCount(0); //xóa bảng 

                        for (NhanVienDTO x : arr) {
                            String CV;
                            String GT;

                            if (x.getChucVu() == 1) {
                                CV = "Nhân VIên";
                            } else {
                                CV = "Admin";
                            }

                            GT = switch (x.getGioiTinh()) {
                                case 1 ->
                                    "Nam";
                                case 0 ->
                                    "Nữ";
                                default ->
                                    "Khác";
                            };

                            if (x.getTrangThai() == 1) {
                                t.addRowToTable(x.getIdNhanVien(), x.getCCCD(), x.getMK(), x.getHoTenLot() + " " + x.getTen(), x.getSDT(), GT, x.getNgaySinh(), CV, x.getLuongThang());
                            }
                        }

                    }
                } else if (opt.equals("SDT")) {
                    arr = NVB.timkiem_mang(opt, (String) tim_txt.getText());
                    if (arr.isEmpty()) {
                        doc_data();
                    } else {
                        Table_ghi t = new Table_ghi();
                        DefaultTableModel model = (DefaultTableModel) NV_table.getModel();
                        model.setRowCount(0); //xóa bảng 

                        for (NhanVienDTO x : arr) {
                            String CV;
                            String GT;

                            if (x.getChucVu() == 1) {
                                CV = "Nhân VIên";
                            } else {
                                CV = "Admin";
                            }

                            GT = switch (x.getGioiTinh()) {
                                case 1 ->
                                    "Nam";
                                case 0 ->
                                    "Nữ";
                                default ->
                                    "Khác";
                            };

                            if (x.getTrangThai() == 1) {
                                t.addRowToTable(x.getIdNhanVien(), x.getCCCD(), x.getMK(), x.getHoTenLot() + " " + x.getTen(), x.getSDT(), GT, x.getNgaySinh(), CV, x.getLuongThang());
                            }
                        }

                    }
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Chưa có dữ liệu trong bảng ");

        }


    }//GEN-LAST:event_tim_btnMouseClicked

    private void GT_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GT_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GT_txtActionPerformed

    private void GT_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GT_txtMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_GT_txtMouseClicked

    private void NV_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NV_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_NV_tableMouseClicked

    private void xuat_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xuat_btnMouseClicked
        if (!data_check) {
            JOptionPane.showMessageDialog(this, "Chưa có dữ liệu trong bảng ");
        } else {
            try {
                XSSFWorkbook wb = new XSSFWorkbook();
                XSSFSheet sheet = wb.createSheet("DSNV");
                XSSFRow row = null;
                Cell cell = null;

                XSSFRow title = null;
                Cell cell_title = null;
                title = sheet.createRow(2);
                cell_title = title.createCell(0, CellType.STRING);
                cell_title.setCellValue("DANH SÁCH SINH VIÊN");

                row = sheet.createRow(3); // xuống 3 dòng
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("ID");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue("Mật khẩu");

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue("CCCD");

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue("Họ Lót");

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue("Tên");

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue("Giới tính");

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue("Ngày Sinh");

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue("SDT");

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue("Chức vụ");

                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue("Lương giờ");

                NhanVienBUS NVB = new NhanVienBUS();
                NVB.docDSNV();
                int i = 0;
                for (NhanVienDTO x : NVB.DSNV) {
                    if (x.getTrangThai() == 1) {
                        row = sheet.createRow(4 + i);

                        cell = row.createCell(0, CellType.STRING);
                        cell.setCellValue(x.getIdNhanVien());

                        cell = row.createCell(1, CellType.STRING);
                        cell.setCellValue(x.getMK());

                        cell = row.createCell(2, CellType.STRING);
                        cell.setCellValue(x.getCCCD());

                        cell = row.createCell(3, CellType.STRING);
                        cell.setCellValue(x.getHoTenLot());

                        cell = row.createCell(4, CellType.STRING);
                        cell.setCellValue(x.getTen());

                        String GT = switch (x.getGioiTinh()) {
                            case 1 ->
                                "Nam";
                            case 0 ->
                                "Nữ";
                            default ->
                                "Khác";
                        };
                        cell = row.createCell(5, CellType.STRING);
                        cell.setCellValue(GT);

                        cell = row.createCell(6, CellType.STRING);
                        cell.setCellValue(x.getNgaySinh());

                        cell = row.createCell(7, CellType.STRING);
                        cell.setCellValue(x.getSDT());

                        String CV = x.getChucVu() == 1 ? "Nhân Viên" : "Admin";
                        cell = row.createCell(8, CellType.STRING);
                        cell.setCellValue(CV);

                        cell = row.createCell(9, CellType.STRING);
                        cell.setCellValue(x.getLuongThang());
                        i++;
                    }
                }

                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn nơi lưu file");
                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    File fileToSave = fileChooser.getSelectedFile();
                    if (!fileToSave.getAbsolutePath().endsWith(".xlsx")) {
                        fileToSave = new File(fileToSave + ".xlsx");
                    }
                    try (FileOutputStream fileOut = new FileOutputStream(fileToSave)) {
                        wb.write(fileOut);
                    }
                    JOptionPane.showMessageDialog(this, "Đã in file thành công ");
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            } catch (SQLException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_xuat_btnMouseClicked

    private void xuat_btnThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuat_btnThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xuat_btnThongkebtnActionPerformed

    private void doc_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doc_btnMouseClicked
        doc_data();
        data_check = true;
    }//GEN-LAST:event_doc_btnMouseClicked

    private void nhap_btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nhap_btn1MouseClicked
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn file Excel");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String excelFilePath = selectedFile.getAbsolutePath();

            try (FileInputStream fis = new FileInputStream(excelFilePath); Workbook workbook = new XSSFWorkbook(fis)) {
                Sheet sheet = workbook.getSheetAt(0);
                int numRows = sheet.getPhysicalNumberOfRows();
                int numCols = sheet.getRow(0).getPhysicalNumberOfCells();

                String[][] data = new String[numRows][numCols];

                for (int i = 1; i < numRows; i++) {
                    Row row = sheet.getRow(i);
                    if (row != null) {
                        for (int j = 0; j < numCols; j++) {
                            Cell cell = row.getCell(j);
                            if (cell != null) {
                                data[i][j] = cell.toString();
                            } else {
                                data[i][j] = "";
                            }
                        }
                    }
                }

                // Xử lý dữ liệu từ file Excel
                NhanVienBUS NVB = new NhanVienBUS();
                Table_ghi t = new Table_ghi();

                for (int i = 1; i < numRows; i++) {
                    if (t.check_CCCD(data[i][1])) {
                        NhanVienDTO NV = new NhanVienDTO();
                        NVB.docDSNV();
                        NV.setMK(data[i][0]);
                        NV.setCCCD(data[i][1]);
                        NV.setHoTenLot(data[i][2]);
                        NV.setTen(data[i][3]);
                        NV.setNgaySinh(data[i][4]);
                        NV.setSDT(data[i][5]);
                        NV.setTrangThai(1);

                        if (data[i][6] != null && data[i][7] != null && data[i][8] != null) {
                            NV.setChucVu(Integer.parseInt(data[i][6]));
                            NV.setLuongThang(Integer.parseInt(data[i][7]));
                            NV.setGioiTinh(Integer.parseInt(data[i][8]));
                        }

                        NVB.them(NV);
                    }
                }

                // Thực hiện các xử lý khác...
                doc_data();
                data_check = true;

                JOptionPane.showMessageDialog(this, "Đã nhập file thành công");

            } catch (IOException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(QLNV.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_nhap_btn1MouseClicked

    private void nhap_btn1ThongkebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhap_btn1ThongkebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nhap_btn1ThongkebtnActionPerformed

    public static class Table_ghi {

        public Table_ghi() {
        }

        ;
    // Phương thức thêm dòng vào bảng
        void addRowToTable(int idNhanVien, String cccd, String MK, String string, String sdt, String GT, String ngaySinh, String CV, int luongThang) {
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) NV_table.getModel();
            Object[] rowData = {idNhanVien, cccd, MK, string, sdt, GT, ngaySinh, CV, luongThang};
            model.addRow(rowData);
        }

        private boolean check() throws SQLException {
            int check1 = 0;
            int check2 = 0;
            boolean check3 = true;
            for (char c : CCCD_txt.getText().toCharArray()) {
                if (!Character.isDigit(c)) {
                    check1++;
                    break;
                }
            }
            for (char c : SDT_txt.getText().toCharArray()) {
                if (!Character.isDigit(c)) {
                    check2++;
                    break;
                }
            }
            NhanVienBUS NVB = new NhanVienBUS();
            NVB.docDSNV();
            for (NhanVienDTO x : NVB.DSNV) {
                if (CCCD_txt.getText().equals(x.getCCCD())) {
                    check3 = false;
                    break;
                }
            }

            if (SDT_txt.getText().equals("") || Ho_txt.getText().equals("") || Ten_txt.getText().equals("") || opt_txt.getSelectedItem().equals("") || CCCD_txt.getText().equals("") || MK_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (CCCD_txt.getText().length() != 12) {
                JOptionPane.showMessageDialog(null, "CCCD phải đủ 12 số", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (check1 != 0) {
                JOptionPane.showMessageDialog(null, "CCCD không được có chữ ", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (!check3) {
                JOptionPane.showMessageDialog(null, "CCCD đã được đăng kí", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (check2 != 0) {
                JOptionPane.showMessageDialog(null, "SDT không được có chữ ", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (SDT_txt.getText().length() != 10) {
                JOptionPane.showMessageDialog(null, "SDT phải đủ 10 số", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            } else {
                return true; // Trả về true nếu tất cả các trường đều hợp lệ
            }
        }

        public boolean check_CCCD(String CCCD) throws SQLException {
            NhanVienBUS NVB = new NhanVienBUS();
            NVB.docDSNV();
            for (NhanVienDTO NV : NVB.DSNV) {
                if (CCCD.equals(NV.getCCCD())) {
                    return false;
                }
            }
            return true;
        }
    }

    public void doc_data() {

        try {
            int SL_HC = 0;
            NhanVienBUS NVB = new NhanVienBUS();
            NVB.docDSNV();
            DefaultTableModel model = (DefaultTableModel) NV_table.getModel();
            model.setRowCount(0); //xóa bảng        
            Table_ghi t = new Table_ghi();
            for (NhanVienDTO x : NVB.DSNV) {
                String CV;
                String GT;

                if (x.getChucVu() == 1) {
                    CV = "Nhân VIên";
                } else {
                    CV = "Admin";
                }

                GT = switch (x.getGioiTinh()) {
                    case 1 ->
                        "Nam";
                    case 0 ->
                        "Nữ";
                    default ->
                        "Khác";
                };

                if (x.getTrangThai() == 1) {
                    SL_HC++;
                    t.addRowToTable(x.getIdNhanVien(), x.getCCCD(), x.getMK(), x.getHoTenLot() + " " + x.getTen(), x.getSDT(), GT, x.getNgaySinh(), CV, x.getLuongThang());
                }
            }
            label_SL.setText(SL_HC + " nhân viên");
        } catch (SQLException e) {
            System.out.println("Lỗi khi thao tác với cơ sở dữ liệu: " + e.getMessage());
        }
    }

//hàm lấy ra id của dòng dc chọn
    public int getSelectedRowID(JTable table) throws SQLException {
        int selectedRow = table.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) table.getValueAt(selectedRow, 0);
            return id; // Cột "ID" là cột đầu tiên (index 0)
        } else {
            return -1;
        }
    }

    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame j = new JFrame();

                j.add(new QLNV());
                j.setSize(780, 600);
                j.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField CCCD_txt;
    private static javax.swing.JComboBox<String> ChucVu_txt;
    private static javax.swing.JComboBox<String> GT_txt;
    private static javax.swing.JTextField Ho_txt;
    private static javax.swing.JComboBox<String> Luong_txt;
    private static javax.swing.JTextField MK_txt;
    public static javax.swing.JTable NV_table;
    private static javax.swing.JComboBox<String> Nam_txt;
    private static javax.swing.JComboBox<String> Ngay_txt;
    private static javax.swing.JTextField SDT_txt;
    private static javax.swing.JTextField Ten_txt;
    private static javax.swing.JComboBox<String> Thang_txt;
    private static javax.swing.JButton doc_btn;
    private static javax.swing.JButton hoantac_btn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JLabel label_SL;
    private static javax.swing.JPanel mainchinh;
    private static javax.swing.JButton nhap_btn1;
    private static javax.swing.JComboBox<String> opt_txt;
    private static javax.swing.JButton sua_btn;
    private static javax.swing.JButton them_btn;
    private static javax.swing.JButton tim_btn;
    private static javax.swing.JTextField tim_txt;
    private javax.swing.JPanel timkiem_form;
    private static javax.swing.JButton xoa_btn;
    private static javax.swing.JButton xuat_btn;
    // End of variables declaration//GEN-END:variables

}
